worker_processes auto;
error_log /www/wwwlogs/nginx_error.log crit;
pid /www/server/nginx/logs/nginx.pid;
worker_rlimit_nofile 51200;

events {
    worker_connections 1024;  # 最大连接数
}

http {
    # 文件类型及默认类型
    include mime.types;
    default_type application/octet-stream;

    # 传输设置
    sendfile on;
    tcp_nopush on;
    keepalive_timeout 60;
    tcp_nodelay on;

    # 启用Gzip压缩
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_vary on;
    gzip_buffers 16 8k;

    # 缓存设置
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=proxy_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_key "$scheme$request_method$host$request_uri";
    proxy_cache_use_stale error timeout updating http_500;
    proxy_cache_valid 200 302 10m;
    proxy_cache_valid 404 1m;
    add_header X-Cache-Status $upstream_cache_status;

    # 限制请求大小
    client_max_body_size 10m;

    # 连接限制
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 10;
    limit_req_zone $binary_remote_addr zone=req_limit:10m rate=10r/s;
    limit_req zone=req_limit burst=20;

    # 代理头部哈希桶大小
    proxy_headers_hash_bucket_size 1024;
    types_hash_bucket_size 1024;

    # 上游服务器配置
    upstream web {
        server web:8000;  # 定义上游服务器，即Django应用所在的服务器
    }

    # 默认重定向到HTTPS
    server {
        listen 80;
        server_name 127.0.0.1;
        return 301 https://$host$request_uri;
    }

    # HTTPS 配置
    server {
        listen 443 ssl;  # 启用 SSL
        server_name pythond.cn;  # 域名

        # SSL 配置
        ssl_certificate /etc/nginx/ssl/pythond.cn.pem;
        ssl_certificate_key /etc/nginx/ssl/pythond.cn.key;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:AEAD-RC4-SHA:!aNULL:!MD5:!3DES';
        ssl_prefer_server_ciphers on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";

        # 代理配置
        location / {
            proxy_pass http://web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_buffers 8 16k;
            proxy_buffer_size 32k;
        }

        # 静态文件代理
        location /static/ {
            alias /code/static/;  # 指定静态文件的路径别名
            expires 30d;
            add_header Cache-Control "public";
        }

        location /media/ {
            alias /code/media/;  # 指定媒体文件的路径别名
            expires 30d;
            add_header Cache-Control "public";
        }

        location /favicon.ico {
            alias /code/static/img/favicon.ico;  # 指定网站图标的路径
            expires 30d;
            add_header Cache-Control "public";
        }
    }
}