events {
    worker_connections  1024;  # 最大连接数
}

http {
    # 启用Gzip压缩
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_vary on;
    gzip_buffers 16 8k;

    include       mime.types;  # 包含标准的MIME类型定义
    default_type  application/octet-stream;  # 默认的MIME类型
    proxy_headers_hash_bucket_size 1024;  # 用于代理头部的哈希桶大小
    types_hash_bucket_size 1024;  # 用于MIME类型的哈希桶大小

    upstream web {
        server web:8000;  # 定义上游服务器，即Django应用所在的服务器
    }


    server {
        listen 80;
        server_name 127.0.0.1;
        return 301 https://$host$request_uri;
    }
    
    server {
        listen 443 ssl; # 启用 SSL
        server_name pythond.cn;  # 域名
        ssl_certificate /etc/nginx/ssl/pythond.cn.pem;
        ssl_certificate_key /etc/nginx/ssl/pythond.cn.key;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;

        location / {
            proxy_pass http://web;  # 将请求代理到上游服务器
            proxy_set_header Host $host;  # 设置Host头部
            proxy_set_header X-Real-IP $remote_addr;  # 设置真实IP头部
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # 设置X-Forwarded-For头部
            proxy_set_header X-Forwarded-Proto $scheme;  # 设置X-Forwarded-Proto头部
        }

        # 静态文件代理
        location /static/ {
            alias /code/static/;  # 指定静态文件的路径别名
        }
        location /media/ {
            alias /code/media/;  # 指定媒体文件的路径别名
        }
        location /favicon.ico {
            alias /code/static/img/favicon.ico;  # 指定网站图标的路径
        }
    }
}